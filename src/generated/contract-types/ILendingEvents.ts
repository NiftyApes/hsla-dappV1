/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, BigNumberish, Signer, utils } from 'ethers';
import { EventFragment } from '@ethersproject/abi';
import { Listener, Provider } from '@ethersproject/providers';
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';

export declare namespace ILendingStructs {
  export type OfferStruct = {
    creator: string;
    duration: BigNumberish;
    expiration: BigNumberish;
    fixedTerms: boolean;
    floorTerm: boolean;
    lenderOffer: boolean;
    nftContractAddress: string;
    nftId: BigNumberish;
    asset: string;
    amount: BigNumberish;
    interestRatePerSecond: BigNumberish;
  };

  export type OfferStructOutput = [
    string,
    number,
    number,
    boolean,
    boolean,
    boolean,
    string,
    BigNumber,
    string,
    BigNumber,
    BigNumber,
  ] & {
    creator: string;
    duration: number;
    expiration: number;
    fixedTerms: boolean;
    floorTerm: boolean;
    lenderOffer: boolean;
    nftContractAddress: string;
    nftId: BigNumber;
    asset: string;
    amount: BigNumber;
    interestRatePerSecond: BigNumber;
  };
}

export interface ILendingEventsInterface extends utils.Interface {
  contractName: 'ILendingEvents';
  functions: {};

  events: {
    'AmountDrawn(address,address,uint256,uint256,uint256)': EventFragment;
    'AssetSeized(address,address,address,uint256)': EventFragment;
    'LoanExecuted(address,address,address,address,uint256,tuple)': EventFragment;
    'LoanRepaid(address,address,address,uint256,address,uint256)': EventFragment;
    'NewOffer(address,address,address,uint256,tuple,bytes32)': EventFragment;
    'OfferRemoved(address,address,address,uint256,tuple,bytes32)': EventFragment;
    'OfferSignatureUsed(address,uint256,tuple,bytes)': EventFragment;
    'PartialRepayment(address,address,address,uint256,address,uint256)': EventFragment;
    'Refinance(address,address,address,address,uint256,tuple)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'AmountDrawn'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'AssetSeized'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'LoanExecuted'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'LoanRepaid'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'NewOffer'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OfferRemoved'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OfferSignatureUsed'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PartialRepayment'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Refinance'): EventFragment;
}

export type AmountDrawnEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, BigNumber],
  {
    borrower: string;
    nftContractAddress: string;
    nftId: BigNumber;
    drawAmount: BigNumber;
    totalDrawn: BigNumber;
  }
>;

export type AmountDrawnEventFilter = TypedEventFilter<AmountDrawnEvent>;

export type AssetSeizedEvent = TypedEvent<
  [string, string, string, BigNumber],
  {
    lender: string;
    borrower: string;
    nftContractAddress: string;
    nftId: BigNumber;
  }
>;

export type AssetSeizedEventFilter = TypedEventFilter<AssetSeizedEvent>;

export type LoanExecutedEvent = TypedEvent<
  [string, string, string, string, BigNumber, ILendingStructs.OfferStructOutput],
  {
    lender: string;
    asset: string;
    borrower: string;
    nftContractAddress: string;
    nftId: BigNumber;
    offer: ILendingStructs.OfferStructOutput;
  }
>;

export type LoanExecutedEventFilter = TypedEventFilter<LoanExecutedEvent>;

export type LoanRepaidEvent = TypedEvent<
  [string, string, string, BigNumber, string, BigNumber],
  {
    lender: string;
    borrower: string;
    nftContractAddress: string;
    nftId: BigNumber;
    asset: string;
    totalPayment: BigNumber;
  }
>;

export type LoanRepaidEventFilter = TypedEventFilter<LoanRepaidEvent>;

export type NewOfferEvent = TypedEvent<
  [string, string, string, BigNumber, ILendingStructs.OfferStructOutput, string],
  {
    creator: string;
    asset: string;
    nftContractAddress: string;
    nftId: BigNumber;
    offer: ILendingStructs.OfferStructOutput;
    offerHash: string;
  }
>;

export type NewOfferEventFilter = TypedEventFilter<NewOfferEvent>;

export type OfferRemovedEvent = TypedEvent<
  [string, string, string, BigNumber, ILendingStructs.OfferStructOutput, string],
  {
    creator: string;
    asset: string;
    nftContractAddress: string;
    nftId: BigNumber;
    offer: ILendingStructs.OfferStructOutput;
    offerHash: string;
  }
>;

export type OfferRemovedEventFilter = TypedEventFilter<OfferRemovedEvent>;

export type OfferSignatureUsedEvent = TypedEvent<
  [string, BigNumber, ILendingStructs.OfferStructOutput, string],
  {
    nftContractAddress: string;
    nftId: BigNumber;
    offer: ILendingStructs.OfferStructOutput;
    signature: string;
  }
>;

export type OfferSignatureUsedEventFilter = TypedEventFilter<OfferSignatureUsedEvent>;

export type PartialRepaymentEvent = TypedEvent<
  [string, string, string, BigNumber, string, BigNumber],
  {
    lender: string;
    borrower: string;
    nftContractAddress: string;
    nftId: BigNumber;
    asset: string;
    amount: BigNumber;
  }
>;

export type PartialRepaymentEventFilter = TypedEventFilter<PartialRepaymentEvent>;

export type RefinanceEvent = TypedEvent<
  [string, string, string, string, BigNumber, ILendingStructs.OfferStructOutput],
  {
    lender: string;
    asset: string;
    borrower: string;
    nftContractAddress: string;
    nftId: BigNumber;
    offer: ILendingStructs.OfferStructOutput;
  }
>;

export type RefinanceEventFilter = TypedEventFilter<RefinanceEvent>;

export interface ILendingEvents extends BaseContract {
  contractName: 'ILendingEvents';
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILendingEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    'AmountDrawn(address,address,uint256,uint256,uint256)'(
      borrower?: string | null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      drawAmount?: null,
      totalDrawn?: null,
    ): AmountDrawnEventFilter;
    AmountDrawn(
      borrower?: string | null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      drawAmount?: null,
      totalDrawn?: null,
    ): AmountDrawnEventFilter;

    'AssetSeized(address,address,address,uint256)'(
      lender?: string | null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
    ): AssetSeizedEventFilter;
    AssetSeized(
      lender?: string | null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
    ): AssetSeizedEventFilter;

    'LoanExecuted(address,address,address,address,uint256,tuple)'(
      lender?: string | null,
      asset?: null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
    ): LoanExecutedEventFilter;
    LoanExecuted(
      lender?: string | null,
      asset?: null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
    ): LoanExecutedEventFilter;

    'LoanRepaid(address,address,address,uint256,address,uint256)'(
      lender?: string | null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      asset?: null,
      totalPayment?: null,
    ): LoanRepaidEventFilter;
    LoanRepaid(
      lender?: string | null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      asset?: null,
      totalPayment?: null,
    ): LoanRepaidEventFilter;

    'NewOffer(address,address,address,uint256,tuple,bytes32)'(
      creator?: string | null,
      asset?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
      offerHash?: null,
    ): NewOfferEventFilter;
    NewOffer(
      creator?: string | null,
      asset?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
      offerHash?: null,
    ): NewOfferEventFilter;

    'OfferRemoved(address,address,address,uint256,tuple,bytes32)'(
      creator?: string | null,
      asset?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
      offerHash?: null,
    ): OfferRemovedEventFilter;
    OfferRemoved(
      creator?: string | null,
      asset?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
      offerHash?: null,
    ): OfferRemovedEventFilter;

    'OfferSignatureUsed(address,uint256,tuple,bytes)'(
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
      signature?: null,
    ): OfferSignatureUsedEventFilter;
    OfferSignatureUsed(
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
      signature?: null,
    ): OfferSignatureUsedEventFilter;

    'PartialRepayment(address,address,address,uint256,address,uint256)'(
      lender?: string | null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      asset?: null,
      amount?: null,
    ): PartialRepaymentEventFilter;
    PartialRepayment(
      lender?: string | null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      asset?: null,
      amount?: null,
    ): PartialRepaymentEventFilter;

    'Refinance(address,address,address,address,uint256,tuple)'(
      lender?: string | null,
      asset?: null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
    ): RefinanceEventFilter;
    Refinance(
      lender?: string | null,
      asset?: null,
      borrower?: null,
      nftContractAddress?: string | null,
      nftId?: BigNumberish | null,
      offer?: null,
    ): RefinanceEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
