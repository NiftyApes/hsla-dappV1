/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { ILendingEvents, ILendingEventsInterface } from '../ILendingEvents';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'drawAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'totalDrawn',
        type: 'uint256',
      },
    ],
    name: 'AmountDrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
    ],
    name: 'AssetSeized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'creator',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'duration',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'expiration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'fixedTerms',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'floorTerm',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'lenderOffer',
            type: 'bool',
          },
          {
            internalType: 'address',
            name: 'nftContractAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nftId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'asset',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'uint96',
            name: 'interestRatePerSecond',
            type: 'uint96',
          },
        ],
        indexed: false,
        internalType: 'struct ILendingStructs.Offer',
        name: 'offer',
        type: 'tuple',
      },
    ],
    name: 'LoanExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'totalPayment',
        type: 'uint256',
      },
    ],
    name: 'LoanRepaid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'creator',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'duration',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'expiration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'fixedTerms',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'floorTerm',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'lenderOffer',
            type: 'bool',
          },
          {
            internalType: 'address',
            name: 'nftContractAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nftId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'asset',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'uint96',
            name: 'interestRatePerSecond',
            type: 'uint96',
          },
        ],
        indexed: false,
        internalType: 'struct ILendingStructs.Offer',
        name: 'offer',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'offerHash',
        type: 'bytes32',
      },
    ],
    name: 'NewOffer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'creator',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'duration',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'expiration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'fixedTerms',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'floorTerm',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'lenderOffer',
            type: 'bool',
          },
          {
            internalType: 'address',
            name: 'nftContractAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nftId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'asset',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'uint96',
            name: 'interestRatePerSecond',
            type: 'uint96',
          },
        ],
        indexed: false,
        internalType: 'struct ILendingStructs.Offer',
        name: 'offer',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'offerHash',
        type: 'bytes32',
      },
    ],
    name: 'OfferRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'creator',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'duration',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'expiration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'fixedTerms',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'floorTerm',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'lenderOffer',
            type: 'bool',
          },
          {
            internalType: 'address',
            name: 'nftContractAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nftId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'asset',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'uint96',
            name: 'interestRatePerSecond',
            type: 'uint96',
          },
        ],
        indexed: false,
        internalType: 'struct ILendingStructs.Offer',
        name: 'offer',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'OfferSignatureUsed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'PartialRepayment',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'nftContractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'creator',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'duration',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'expiration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'fixedTerms',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'floorTerm',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'lenderOffer',
            type: 'bool',
          },
          {
            internalType: 'address',
            name: 'nftContractAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nftId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'asset',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'uint96',
            name: 'interestRatePerSecond',
            type: 'uint96',
          },
        ],
        indexed: false,
        internalType: 'struct ILendingStructs.Offer',
        name: 'offer',
        type: 'tuple',
      },
    ],
    name: 'Refinance',
    type: 'event',
  },
];

export class ILendingEvents__factory {
  static readonly abi = _abi;
  static createInterface(): ILendingEventsInterface {
    return new utils.Interface(_abi) as ILendingEventsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ILendingEvents {
    return new Contract(address, _abi, signerOrProvider) as ILendingEvents;
  }
}
